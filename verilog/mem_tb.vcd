$date
	Thu Feb 16 21:08:07 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module mem_tb $end
$var wire 64 ! valM [63:0] $end
$var wire 64 " memdata [63:0] $end
$var reg 4 # icode [3:0] $end
$var reg 4 $ ifun [3:0] $end
$var reg 64 % valA [63:0] $end
$var reg 64 & valE [63:0] $end
$var reg 64 ' valP [63:0] $end
$scope module m1 $end
$var wire 4 ( icode [3:0] $end
$var wire 4 ) ifun [3:0] $end
$var wire 64 * valA [63:0] $end
$var wire 64 + valE [63:0] $end
$var wire 64 , valP [63:0] $end
$var reg 64 - memdata [63:0] $end
$var reg 64 . valM [63:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 / i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000000000 /
bx .
b111 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b111 "
bx !
$end
#100000
b1010 '
b1010 ,
b1010 &
b1010 +
b1010 %
b1010 *
b1 #
b1 (
#200000
b10 #
b10 (
#300000
b11 #
b11 (
#400000
b1010 "
b1010 -
b100 #
b100 (
#500000
b1010 !
b1010 .
b101 #
b101 (
#600000
b110 #
b110 (
#700000
b111 #
b111 (
#800000
b1000 #
b1000 (
#900000
b1001 #
b1001 (
#1000000
b1010 #
b1010 (
#1100000
b1011 #
b1011 (
