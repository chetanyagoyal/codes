$date
	Tue Feb 14 20:58:53 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module decode_tb $end
$var wire 64 ! valB [63:0] $end
$var wire 64 " valA [63:0] $end
$var reg 64 # RrA [63:0] $end
$var reg 64 $ RrB [63:0] $end
$var reg 64 % Rrsp [63:0] $end
$var reg 1 & clk $end
$var reg 4 ' icode [3:0] $end
$var reg 4 ( ifun [3:0] $end
$var reg 1 ) instr_valid $end
$scope module uut $end
$var wire 64 * RrA [63:0] $end
$var wire 64 + RrB [63:0] $end
$var wire 64 , Rrsp [63:0] $end
$var wire 1 & clk $end
$var wire 4 - icode [3:0] $end
$var wire 4 . ifun [3:0] $end
$var wire 1 ) instr_valid $end
$var reg 64 / valA [63:0] $end
$var reg 64 0 valB [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
bz .
bz -
bz ,
bz +
bz *
0)
bz (
bz '
0&
bz %
bz $
bz #
bx "
bx !
$end
#10000
b10 %
b10 ,
b10010 $
b10010 +
b1 #
b1 *
b0 (
b0 .
b0 '
b0 -
1)
1&
#20000
b11 %
b11 ,
b10001 $
b10001 +
b10 #
b10 *
b1 '
b1 -
0&
#30000
b11 "
b11 /
b100 %
b100 ,
b10000 $
b10000 +
b11 #
b11 *
b10 '
b10 -
1&
#40000
b100 "
b100 /
b101 %
b101 ,
b1111 $
b1111 +
b100 #
b100 *
b1 (
b1 .
0&
#50000
b101 "
b101 /
b110 %
b110 ,
b1110 $
b1110 +
b101 #
b101 *
b10 (
b10 .
1&
#60000
b110 "
b110 /
b111 %
b111 ,
b1101 $
b1101 +
b110 #
b110 *
b11 (
b11 .
0&
#70000
b111 "
b111 /
b1000 %
b1000 ,
b1100 $
b1100 +
b111 #
b111 *
b100 (
b100 .
1&
#80000
b1000 "
b1000 /
b1001 %
b1001 ,
b1011 $
b1011 +
b1000 #
b1000 *
b101 (
b101 .
0&
#90000
b1010 !
b1010 0
b1001 "
b1001 /
b1010 %
b1010 ,
b1010 $
b1010 +
b1001 #
b1001 *
b0 (
b0 .
b100 '
b100 -
1&
#100000
b1001 !
b1001 0
b1011 %
b1011 ,
b1001 $
b1001 +
b1010 #
b1010 *
b101 '
b101 -
0&
#110000
b1000 !
b1000 0
b1011 "
b1011 /
b1100 %
b1100 ,
b1000 $
b1000 +
b1011 #
b1011 *
b110 '
b110 -
1&
#120000
b111 !
b111 0
b1100 "
b1100 /
b1101 %
b1101 ,
b111 $
b111 +
b1100 #
b1100 *
b1 (
b1 .
0&
#130000
b110 !
b110 0
b1101 "
b1101 /
b1110 %
b1110 ,
b110 $
b110 +
b1101 #
b1101 *
b10 (
b10 .
1&
#140000
b101 !
b101 0
b1110 "
b1110 /
b1111 %
b1111 ,
b101 $
b101 +
b1110 #
b1110 *
b11 (
b11 .
0&
#150000
b10000 !
b10000 0
b10000 %
b10000 ,
b100 $
b100 +
b1111 #
b1111 *
b0 (
b0 .
b1000 '
b1000 -
1&
#160000
b10001 !
b10001 0
b10001 "
b10001 /
b10001 %
b10001 ,
b11 $
b11 +
b10000 #
b10000 *
b1001 '
b1001 -
0&
#170000
b10010 "
b10010 /
b10010 %
b10010 ,
b10 $
b10 +
b10001 #
b10001 *
b1010 '
b1010 -
1&
#180000
b10011 "
b10011 /
b10011 %
b10011 ,
b1 $
b1 +
b10010 #
b10010 *
b1011 '
b1011 -
0&
